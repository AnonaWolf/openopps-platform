version: '3'
services:
  app:
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - .:/app
      - node-modules:/app/node_modules/
    working_dir: /app
    command:
      - /wait-for-migrate-db-container.sh
      - db
      - npm run watch
    ports:
      - 3000:3000
    links:
      - db
    environment:
      - PATH=/app/node_modules/.bin:$PATH
      - DATABASE_URL=postgres://midas@db/midas
      - DATASTORE=postgresql
      - LOG_LEVEL=silly
      - PORT=3000
      - EMAIL_SYSTEM_ADDRESS='docker@openopps.local'
      - EMAIL_HOST='smtp.fake.com'
      - EMAIL_SSL=false
      - EMAIL_PORT=25
      - SAILS_SECRET=just_for_testing_yo
      - 'VCAP_APPLICATION={ "uris": [ "openopps-test.18f.gov" ] }'
    depends_on:
      - db
      - migrate_db
      - init_db
  # README: Migrate the database so that npm run init can write to it.
  migrate_db:
    build:
      dockerfile: Dockerfile
      context: .
    command: npm run migrate
    volumes:
      - .:/app
      - node-modules:/app/node_modules/
    environment:
      - PATH=/app/node_modules/.bin:$PATH
      - DATABASE_URL=postgres://midas@db/midas
      - DATASTORE=postgresql
      - LOG_LEVEL=silly
      - PORT=3002
    links:
      - db
    depends_on:
      - db
  mail:
    image: tophfr/mailcatcher
    ports:
      - 8025:80 # for the web UI
    networks:
      servicesNetwork:
        aliases:
          - smtp.fake.com
  # README: Initialize the database so that Sails can connect to it.
  init_db:
    build:
      dockerfile: Dockerfile
      context: .
    command:
      - /wait-for-migrate-db-container.sh
      - db
      - npm run init
    volumes:
      - .:/app
      - node-modules:/app/node_modules/
    environment:
      - PATH=/app/node_modules/.bin:$PATH
      - DATABASE_URL=postgres://midas@db/midas
      - DATASTORE=postgresql
      - LOG_LEVEL=silly
      - PORT=3001
    links:
      - db
    depends_on:
      - db
      - migrate_db
  db:
    image: postgres:9.3
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=midas
      - POSTGRES_USER=midas
volumes:
  node-modules:
  pgdata:
networks:
  servicesNetwork:
    driver: bridge
